Users Module
	UsersTable
	UserRolesTable
	
Department Module
	-Only admin can crud department record

Projects Module
	-Only Manager can crud projects record

Positions Module
	-Only Manger can crud projects record

Activity Module

ProductivityModule
	-Only Admin can crud Productivity
	
	
Members Module
	Only manager can 
	
Projects
  -Department
  -Productivity
  -Members
  
  
  
  
 create table departments(
	id int auto_increment not null primary key,
	dept_name varchar(255) not null,
	created datetime not null,
	updated datetime,
	deleted datetime
 ); 
  
 create table projects(
	id int not null auto_increment primary key,
	proj_name varchar(255) not null,
	created datetime not null,
	updated datetime,
	deleted datetime
 );
 
 create table positions(
	id int auto_increment not null primary key,
	pos_name varchar(255) not null,
	created datetime not null,
	updated datetime,
	deleted datetime
 );
 
 create table members(
	id int not null auto_increment primary key,
	name varchar(255) not null,
	created datetime not null,
	updated datetime,
	deleted datetime
 );
 
  create table productivity(
	id int auto_increment not null primary key,
	exp_type enum('Beginner','Moderate','Expererience') default 'Beginner' not null,
	prod_val tinyint not null default 1,
	created datetime not null,
	updated datetime,
	deleted datetime
 );
 
 -- normalize tables
 create table department_projects(
	id int not null auto_increment primary key,
	dep_id int not null,
	proj_id int not null,
	created datetime not null,
	updated datetime,
	deleted datetime,
	foreign key(dep_id) references departments(id),
	foreign key(proj_id) references projects(id)
 );
 
 create table dep_proj_pos(
	id int not null auto_increment primary key,
	dep_proj_id int not null,
	pos_id int not null,
	created datetime not null,
	updated datetime,
	deleted datetime,
	foreign key(dep_proj_id) references department_projects(id),
	foreign key(pos_id) references positions(id)
 );
 
 
create table dep_proj_pos_mem(
	id int auto_increment not null primary key,
	dep_proj_pos_id int not null,
	mem_id int not null,
	created datetime not null,
	updated datetime,
	deleted datetime,
	foreign key(dep_proj_pos_id) references dep_proj_pos(id),
	foreign key(mem_id) references members(id)
);

-- department project position productivity
create table dep_proj_pos_prod(
	id int primary key auto_increment not null,
	dep_proj_pos_id int not null,
	prod_id int not null,
	created datetime not null,
	updated datetime,
	deleted datetime,
	foreign key(dep_proj_pos_id) references dep_proj_pos(id),
	foreign key(prod_id) references productivity(id)
);


 
 
 
 
 